# vim: set ft=yaml ts=2 expandtab:

# BSD 3-Clause License
#
# Copyright (c) 2020,2021 Markus Falb <markus.falb@mafalb.at>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

---

- name: Verify molecule
  hosts: all,!ci-centos6,!ci-ubuntuxenial

  module_defaults:
    shell:
      executable: /bin/bash

  vars:
    files:
    - tests/testcollection/galaxy.yml
    - tests/testcollection/roles/testrole/README.md
    - tests.testrole/README.md
    virtualenvs:
    - { index: 0, virtualenv: molecule }
    - { index: 1, virtualenv: default1 }
    - { index: 2, virtualenv: default2 }
    - { index: 3, virtualenv: default3 }
    - { index: 4, virtualenv: default4 }
    - { index: 5, virtualenv: default5 }
    - { index: 6, virtualenv: default6 }
    - { index: 7, virtualenv: default7 }

  tasks:

  - name: get locale
    changed_when: false
    command: locale
    register: _locale

  - debug: var=_locale

  - name: molecule is present - molecule
    shell: |
      . ~/.virtualenvs/{{ item.virtualenv }}/bin/activate
      molecule --version
    changed_when: false
    loop: "{{ virtualenvs }}"
    register: _molecules_version

  - debug: var=_molecules_version

  - name: correct version of ansible/molecule is installed
    assert:
      that:

      - _molecules_version.results[1].stdout_lines[1] is match('    ansible:2.9.')
      - _molecules_version.results[1].stdout_lines[1].split()[0].split(":")[1] is version('2.9.10', '>')
      - _molecules_version.results[1].stdout_lines[0].split()[1] is version('3.1.5','=')

      - _molecules_version.results[2].stdout_lines[1] is match('    ansible:2.9.')
      - _molecules_version.results[2].stdout_lines[0].split()[1] is version('3.2.0','>=')

      - _molecules_version.results[3].stdout_lines[1] is match('    ansible:2.10.')
      - _molecules_version.results[3].stdout_lines[1].split()[0].split(":")[1] is version('2.10.1', '>')
      - _molecules_version.results[3].stdout_lines[0].split()[1] is version('3.1.5','=')

      - _molecules_version.results[4].stdout_lines[1] is match('    ansible:2.10.')
      - _molecules_version.results[4].stdout_lines[1].split()[0].split(":")[1] is version('2.10.1', '>')
      - _molecules_version.results[4].stdout_lines[0].split()[1] is version('3.1.5','>')

      - _molecules_version.results[5].stdout_lines[1] is match('    ansible:2.9.')
      - _molecules_version.results[5].stdout_lines[1].split()[0].split(":")[1] is version('2.9.10', '=')
      - _molecules_version.results[5].stdout_lines[0].split()[1] is version('3.1.5','>')

      - _molecules_version.results[5].stdout_lines[1] is match('    ansible:2.9.')
      - _molecules_version.results[6].stdout_lines[0].split()[1] is version('3.1.5','>')

      - _molecules_version.results[4].stdout_lines[1] is match('    ansible:2.10.')
      - _molecules_version.results[4].stdout_lines[1].split()[0].split(":")[1] is version('2.10.1', '>')
      - _molecules_version.results[7].stdout_lines[0].split()[1] is version('3.2.0','>=')

  - name: verify molecule installation
    include_role:
      name: verify_molecule
    vars:
      virtualenv: "{{ item.virtualenv }}"
    loop: "{{ virtualenvs }}"

...
