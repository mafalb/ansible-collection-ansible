# vim: set ft=yaml ts=2 expandtab:
---

- name: get OS specific variables
  with_first_found:
  - "{{ ansible_os_family }}-{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
  - "{{ ansible_os_family }}-{{ ansible_distribution }}.yml"
  - "{{ ansible_os_family }}-{{ ansible_distribution_release }}.yml"
  - "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"
  - "{{ ansible_os_family }}.yml"
  include_vars:
    file: "{{ item }}"

- name: assertions
  assert:
    that:
    - molecule_virtualenv is defined

- name: molecule_ansible_version
  debug:
    var: molecule_ansible_version
  tags:
  - never
  - debug

# role dependencies in meta.yml does not work
# https://github.com/ansible/galaxy/issues/1938
#
- name: ansible node dependencies are present
  include_role:
    name: mafalb.ansible.node
  vars:
    ansible_node_features:
    - pip

# disable cr repo again when CentOS 7.8 is released
#
- name: molecules dependencies are present
  become: true
  package:
    name: "{{ molecule_system_dependencies }}"
    enablerepo: "{{ molecule_enablerepo|default(omit) }}"

# we can not use the system wide tmp dir
# https://github.com/ansible/ansible/issues/57436
#
- name: tmp directory is present
  file:
    path: "{{ molecule_virtualenv }}/../tmp"
    state: directory
    mode: 01777

# use absolute path to virtualenv
# https://github.com/ansible/ansible/issues/22967
#
# and do not use site packages
# https://github.com/ansible/molecule/issues/1888
#
# we can not use the system wide tmp dir
# https://github.com/ansible/ansible/issues/57436
# it is important to use ansible_user_dir, not ~
#
- name: ansible is installed
  pip:
    name:
    - ansible=={{ molecule_ansible_version }}.*
    extra_args: "{{ '-U --upgrade-strategy eager' if molecule_update_ansible is defined else omit }}"
    virtualenv: "{{ molecule_virtualenv }}"
    virtualenv_command: "{{ molecule_virtualenv_command }}"
  environment:
    TMPDIR: "{{ molecule_virtualenv }}/../tmp"

- name: get installed version of setuptools
  command: "{{ molecule_virtualenv }}/bin/pip list"
  changed_when: false
  register: _pip_list

- debug:
    var: _pip_list
  tags:
  - never
  - debug

# use absolute path to virtualenv
# https://github.com/ansible/ansible/issues/22967
#
# and do not use site packages
# https://github.com/ansible/molecule/issues/1888
#
- name: molecule is installed
  pip:
    name:
    - molecule=={{ molecule_major_version }}.*
    - tox
    extra_args: "{{ '-U --upgrade-strategy eager' if molecule_update is defined else omit }}"
    virtualenv: "{{ molecule_virtualenv }}"
    virtualenv_command: "{{ molecule_virtualenv_command }}"

- name: get installed version of setuptools
  command: "{{ molecule_virtualenv }}/bin/pip list"
  changed_when: false
  register: _pip_list

- debug:
    var: _pip_list
  tags:
  - never
  - debug

# use absolute path to virtualenv
# https://github.com/ansible/ansible/issues/22967
#
# and do not use site packages
# https://github.com/ansible/molecule/issues/1888
#
# for some reason i had to split it out to a separate task
# molecule and molecule[docker] in the same pip task did not work
#
- name: molecule[docker] is installed
  pip:
    name:
    - molecule[docker]
    virtualenv: "{{ molecule_virtualenv }}"
    virtualenv_command: "{{ molecule_virtualenv_command }}"

- name: molecule[lint] is installed
  pip:
    name:
    - molecule[lint]
    virtualenv: "{{ molecule_virtualenv }}"
    virtualenv_command: "{{ molecule_virtualenv_command }}"

- name: molecule[test] is installed
  pip:
    name:
    - molecule[test]
    virtualenv: "{{ molecule_virtualenv }}"
    virtualenv_command: "{{ molecule_virtualenv_command }}"

# _ansible_version does not work, i use _ansibles_version
# reserved variable ?
#
- name: get ansible version
  changed_when: false
  command: "{{ molecule_virtualenv }}/bin/ansible --version"
  register: _ansibles_version

- name: ansible version
  debug:
    var: _ansibles_version.stdout
  tags:
  - never
  - debug

- name: assertions
  when:
  - molecule_ansible_version is defined
  assert:
    that:
    - _ansibles_version.stdout is match('ansible {{ molecule_ansible_version }}.*')

...
