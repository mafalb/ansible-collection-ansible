# vim: set ft=yaml ts=2 expandtab:
---

- name: get OS specific variables
  with_first_found:
  - "{{ ansible_os_family }}-{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
  - "{{ ansible_os_family }}-{{ ansible_distribution }}.yml"
  - "{{ ansible_os_family }}-{{ ansible_distribution_release }}.yml"
  - "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"
  - "{{ ansible_os_family }}.yml"
  include_vars:
    file: "{{ file }}"
  loop_control:
    loop_var: file

- name: assertions
  assert:
    that:
    - molecule_virtualenv is defined
    - molecule_version is defined
    - molecule_ansible_version is defined

- name: versions
  debug:
    msg: "{{ version }}"
  loop:
  - "{{ molecule_version }}"
  - "{{ molecule_ansible_version }}"
  loop_control:
    loop_var: version
  tags:
  - never
  - debug

# role dependencies in meta.yml does not work
# https://github.com/ansible/galaxy/issues/1938
#
- name: ansible node dependencies are present
  include_role:
    name: mafalb.ansible.node
  vars:
    ansible_node_features:
    - pip

# disable cr repo again when CentOS 7.8 is released
#
- name: molecules dependencies are present
  become: true
  package:
    name: "{{ molecule_system_dependencies }}"
    enablerepo: "{{ molecule_enablerepo|default(omit) }}"

# we can not use the system wide tmp dir
# https://github.com/ansible/ansible/issues/57436
#
- name: tmp directory is present
  file:
    path: "{{ molecule_virtualenv }}/../tmp"
    state: directory
    mode: 01777

# use absolute path to virtualenv
# https://github.com/ansible/ansible/issues/22967
#
# and do not use site packages
# https://github.com/ansible/molecule/issues/1888
#
# we can not use the system wide tmp dir
# https://github.com/ansible/ansible/issues/57436
# it is important to use ansible_user_dir, not ~
#
- name: molecule is installed (ansible before 2.10)
  pip:
    name:
    - molecule[lint,docker,test]=={{ molecule_version|mafalb.ansible.pipver }}
    - ansible=={{ molecule_ansible_version|mafalb.ansible.pipver }}
    - tox
    - jmespath
    - pylint
    - rstcheck
    - Jinja2<2.11
    extra_args: "{{ '-U eager' if molecule_update is defined else omit }}"
    virtualenv: "{{ molecule_virtualenv }}"
    virtualenv_command: "{{ molecule_virtualenv_command }}"
  when: molecule_ansible_version|mafalb.ansible.semver is version('2.10.0', '<')

# ansible-base is explicitly mentioned, otherwise it is upgraded to the latest
# possibly causing a mismatch between ansible and ansible-base
#
- name: molecule is installed (ansible 2.10 or later)
  pip:
    name:
    - molecule[lint,docker,test]=={{ molecule_version|mafalb.ansible.pipver }}
    - ansible-base=={{ molecule_ansible_base_version|default(molecule_ansible_version)|mafalb.ansible.pipver }}
    - ansible=={{ molecule_ansible_version|mafalb.ansible.pipver }}
    - tox
    - jmespath
    - pylint
    - rstcheck
    extra_args: "{{ '-U eager' if molecule_update is defined else omit }}"
    virtualenv: "{{ molecule_virtualenv }}"
    virtualenv_command: "{{ molecule_virtualenv_command }}"
  when: molecule_ansible_version|mafalb.ansible.semver is version('2.10.0', '>=')

- block:
  - name: get installed version of setuptools after molecule[lint]
    command: "{{ molecule_virtualenv }}/bin/pip list --format=columns"
    changed_when: false
    register: _pip_list
  - debug:
      var: _pip_list.stdout_lines
  tags:
  - never
  - debug


- block:

  # _ansible_version does not work, i use _ansibles_version
  # reserved variable ?
  #
  - name: get ansible version
    command: "{{ molecule_virtualenv }}/bin/ansible --version"
    changed_when: false
    register: _ansibles_version

  - name: get molecules version
    shell: |
      . {{ molecule_virtualenv }}/bin/activate
      NO_COLOR=1 molecule --version
    changed_when: false
    register: _molecules_version

  - name: ansible version
    debug:
      var: _ansibles_version.stdout
    tags:
    - never
    - debug

  - name: molecules version
    debug:
      var: _molecules_version.stdout
    tags:
    - never
    - debug

  - name: assertions
    assert:
      that:
      - _ansibles_version.stdout is match('ansible {{ molecule_ansible_version }}')
      - _molecules_version.stdout is match('molecule {{ molecule_version }}')


  when: molecule_ansible_version is defined

...
