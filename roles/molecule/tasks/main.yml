# vim: set ft=yaml ts=2 expandtab:

# This file is part of Ansible Collection mafalb.ansible
# Copyright (c) 2019-2021 Markus Falb <markus.falb@mafalb.at>
#
# Ansible collection mafalb.ansible is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Ansible collection mafalb.ansible is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ansible collection mafalb.ansible.
# If not, see <https://www.gnu.org/licenses/>.

---

- name: get OS specific variables
  with_first_found:
  - "{{ ansible_os_family }}-{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
  - "{{ ansible_os_family }}-{{ ansible_distribution }}.yml"
  - "{{ ansible_os_family }}-{{ ansible_distribution_release }}.yml"
  - "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"
  - "{{ ansible_os_family }}.yml"
  include_vars:
    file: "{{ file }}"
  loop_control:
    loop_var: file

- name: assertions
  assert:
    that:
    - molecule_virtualenv is defined
    - molecule_version is defined
    - molecule_ansible_version is defined
    - molecule_ansible_pip_packages|type_debug == 'list'

- name: versions
  debug:
    msg: "{{ version }}"
  loop:
  - "{{ molecule_version }}"
  - "{{ molecule_ansible_version }}"
  - "{{ ansible_lint_version }}"
  loop_control:
    loop_var: version
  tags:
  - never
  - debug

# role dependencies in meta.yml does not work
# https://github.com/ansible/galaxy/issues/1938
#
- name: ansible node dependencies are present
  include_role:
    name: mafalb.ansible.node
  vars:
    ansible_node_features:
    - pip

# disable cr repo again when CentOS 7.8 is released
#
- name: molecules dependencies are present
  become: true
  package:
    name: "{{ molecule_system_dependencies }}"
    enablerepo: "{{ molecule_enablerepo|default(omit) }}"

- name: virtualenv is present
  pip:
    name:
    - pip>=20.3,<21.1
    - setuptools>41
    - wheel
    virtualenv: "{{ molecule_virtualenv }}"
    virtualenv_command: "{{ molecule_virtualenv_command }}"

- name: constraints file is present
  copy:
    src: files/constraints/ansible_test-2.11.4.txt
    dest: "{{ molecule_virtualenv }}/.ansible-test.constraints.txt"
    backup: true

# we can not use the system wide tmp dir
# https://github.com/ansible/ansible/issues/57436
#
- name: tmp directory is present
  file:
    path: "{{ molecule_virtualenv }}/../tmp"
    state: directory
    mode: 01777

- block:
  - name: get installed version of setuptools before molecule is installed
    command: "{{ molecule_virtualenv }}/bin/pip list --format=columns"
    changed_when: false
    register: _pip_list
  - name: debug
    debug:
      var: _pip_list.stdout_lines
  tags:
  - never
  - debug

- name: debug
  debug: var=molecule_version|mafalb.ansible.pipver
- name: debug
  debug: var=ansible_lint_version
- name: debug molecule_ansible_version
  debug: var=molecule_ansible_version
- name: debug molecule_ansible_version|mafalb.ansible.semver
  debug: var=molecule_ansible_version|mafalb.ansible.semver
- name: debug mafalb.ansible.pipver
  debug: var=molecule_ansible_version|mafalb.ansible.pipver
- name: debug molecule_ansible_pip_packages
  debug: var=molecule_ansible_pip_packages
- name: debug molecule_pip_packages
  debug: var=molecule_pip_packages

- name: get ansible version
  command: "{{ molecule_virtualenv }}/bin/pip show ansible"
  register: _ansibles_community_version
  failed_when: false
  changed_when: false

- name: debug _ansibles_community_version
  debug: var=_ansibles_community_version

# upgrade from ansible 2.9
#
- name: uninstall ansible and ansible-core
  pip:
    name:
    - ansible
    - ansible-base
    - ansible-core
    state: absent
    virtualenv: "{{ molecule_virtualenv }}"
    virtualenv_command: "{{ molecule_virtualenv_command }}"
  when:
  - molecule_ansible_version|mafalb.ansible.pipver is not match('2.9')
  - _ansibles_community_version.stdout is match('ansible 2.9')

# upgrade to ansible 2.11
#
- name: uninstall ansible and ansible-core
  pip:
    name:
    - ansible
    - ansible-base
    - ansible-core
    state: absent
    virtualenv: "{{ molecule_virtualenv }}"
    virtualenv_command: "{{ molecule_virtualenv_command }}"
  when:
  - molecule_ansible_version|mafalb.ansible.pipver is match('2.11')
  - _ansibles_community_version.stdout is not match('ansible \[core 2.11')

#  - "'ansible' in _ansibles_version.packages[{{ molecule_virtualenv }}/bin/pip }}]"
#  - _ansibles_version.packages[{{ molecule_virtualenv }}/bin/pip }}]['ansible'][0].version.split('.')
#  - "'ansible-base' in _ansibles_version.packages[{{ molecule_virtualenv }}/bin/pip }}]"

# use absolute path to virtualenv
# https://github.com/ansible/ansible/issues/22967
#
# and do not use site packages
# https://github.com/ansible/molecule/issues/1888
#
# we can not use the system wide tmp dir
# https://github.com/ansible/ansible/issues/57436
# it is important to use ansible_user_dir, not ~
#
- name: molecule is installed
  pip:
    name: "{{ molecule_ansible_pip_packages + molecule_pip_packages + ansible_test_packages }}"
    extra_args: "{{ '-U eager' if molecule_update is defined else '' }} -c {{ molecule_virtualenv }}/ansible-test.constraints.txt"
    virtualenv: "{{ molecule_virtualenv }}"
    virtualenv_command: "{{ molecule_virtualenv_command }}"

- block:
  - name: get installed version of setuptools after molecule is installed
    command: "{{ molecule_virtualenv }}/bin/pip list --format=columns"
    changed_when: false
    register: _pip_list
  - name: debug _pip_list
    debug:
      var: _pip_list.stdout_lines
  tags:
  - never
  - debug

- block:
  - name: get installed version of setuptools after molecule test is installed
    command: "{{ molecule_virtualenv }}/bin/pip list --format=columns"
    changed_when: false
    register: _pip_list
  - name: debug
    debug:
      var: _pip_list.stdout_lines
  tags:
  - never
  - debug


- block:

  # _ansible_version does not work, i use _ansibles_version
  # reserved variable ?
  #
  - name: get ansible version
    command: "{{ molecule_virtualenv }}/bin/ansible --version"
    changed_when: false
    register: _ansibles_version

  - name: get molecules version
    shell: |
      . {{ molecule_virtualenv }}/bin/activate
      NO_COLOR=1 molecule --version
    changed_when: false
    register: _molecules_version

  - name: ansible version
    debug:
      var: _ansibles_version.stdout
    tags:
    - never
    - debug

  - name: molecules version
    debug:
      var: _molecules_version.stdout
    tags:
    - never
    - debug

  - name: assertions
    assert:
      that:
      - _ansibles_version.stdout is match('ansible .*{{ molecule_ansible_version|default(molecule_ansible_version) }}')
      - _molecules_version.stdout is match('molecule {{ molecule_version }}')


  when: molecule_ansible_version is defined

...
