# vim: set ft=yaml ts=2 expandtab:
---

name: UNSTABLE

on:  # yamllint disable-line rule:truthy

  push:
    branches:
    - '**'
    tags-ignore:
    - '*'

jobs:

  UNSTABLE_ANSIBLE_TEST:

    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false

      matrix:

        include:

        - ansible_version: '2.9'
          python-version: 2.7

        - ansible_version: '2.9'
          python-version: 3.5

        - ansible_version: '2.9'
          python-version: 3.6

        - ansible_version: '2.9'
          python-version: 3.7

        - ansible_version: '2.9'
          python-version: 3.8


        - ansible_version: '2.10'
          python-version: 3.6

        - ansible_version: '2.10'
          python-version: 3.7

        - ansible_version: '2.10'
          python-version: 3.8

        - ansible_version: '2.10'
          python-version: 3.9


        - ansible_core_version: '2.11'
          python-version: 3.6

        - ansible_core_version: '2.11'
          python-version: 3.7

        - ansible_core_version: '2.11'
          python-version: 3.8

        - ansible_core_version: '2.11'
          python-version: 3.9


        - ansible_core_version: '2.12.0rc1'
          python-version: '3.8'

        - ansible_core_version: '2.12.0rc1'
          python-version: '3.9'

        - ansible_core_version: '2.12.0rc1'
          python-version: '3.10'

    env:
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1
      ANSIBLE_PYTHON_INTERPRETER: ${{ matrix.python-version }}/bin/python

    defaults:
      run:
        working-directory: ansible_collections/mafalb/ansible

    steps:

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
  
      - name: install shellcheck
        run: sudo apt install shellcheck
  
      - name: checkout collection ansible
        uses: actions/checkout@v2
        with:
          path: ansible_collections/mafalb/ansible

      - name: install molecule
        run: |
          ansible-playbook -D playbooks/install-molecule.yml -e molecule_ansible_version=${{ matrix.ansible_version }} -t all,debug
        env:
          ANSIBLE_COLLECTIONS_PATHS: ../../..

      - name: install community.docker for ansible >= 2.11
        if: matrix.ansible_version != '2.9' && matrix.ansible_version != '2.10'
        run: ansible-galaxy collection install community.docker

      - name: install community.general for ansible 2.10
        if: matrix.ansible_version == '2.10'
        run: ansible-galaxy collection install community.general

      - name: check ansible version
        run: |
          source ~/.virtualenvs/molecule/bin/activate
          ansible --version | grep "^ansible.* ${{ matrix.ansible_version }}"

      - name: lint
        run: |
          source ~/virtualenv/bin/activate
          . tests/lint.sh requirements ${{ matrix.python-version }}

      - name: sanity
        run: |
          source ~/virtualenv/bin/activate
          ansible-test sanity --python ${{ matrix.python-version }}

      - name: unit tests
        run: |
          source ~/virtualenv/bin/activate
          ansible-test units --coverage --python ${{ matrix.python-version }}


  UNSTABLE_MOLECULE:

    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false

      matrix:

        target:
        # there are special dependencies for fedora35 that are probably not necessary anymore
        - fedora35
        - c9s
        - c8s

        ansible_version:
        - '2.9'
        - '2.10'
        - '2.11'
        # fix virtualenv molecule scenario after release
        - '2.12.0rc1'

        include:

        # for now only with installed gcc and libffi-devel
        # waiting for python 3.10 wheel for cffi
        #
        - target: fedora35
          image: quay.io/fedora/fedora:35-x86_64
          test_molecule: true
          test_controlnode: true

        # no controlnode because of missing epel
        #
        - target: c9s
          image: quay.io/centos/centos:stream9-development
          test_molecule: true
          test_controlnode: false

        - target: c8s
          image: quay.io/centos/centos:stream8
          test_molecule: true
          test_controlnode: true
          test29: true

    env:
      ANSIBLE_VERSION: ${{ matrix.ansible_version }}
      CI_IMAGE: ${{ matrix.image }}
      CI_HOSTNAME: ci-${{ matrix.target }}
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1

    defaults:
      run:
        working-directory: ansible_collections/mafalb/ansible

    steps:

      - name: checkout collection ansible
        uses: actions/checkout@v2
        with:
          path: ansible_collections/mafalb/ansible

      - name: install molecule
        run: |
          ansible-playbook -D playbooks/install-molecule.yml -e molecule_ansible_version=${{ matrix.ansible_version }} -t all,debug
        env:
          ANSIBLE_COLLECTIONS_PATHS: ../../..

      - name: install community.docker for ansible >= 2.11
        if: matrix.ansible_version != '2.9' && matrix.ansible_version != '2.10'
        run: ansible-galaxy collection install community.docker

      - name: install community.general
        if: matrix.ansible_version == '2.10'
        run: ansible-galaxy collection install community.general

      - name: check ansible version
        run: |
          source ~/.virtualenvs/molecule/bin/activate
          ansible --version | grep "^ansible.* ${{ matrix.ansible_version }}"

      - name: molecule node scenario
        run: |
          source ~/.virtualenvs/molecule/bin/activate
          molecule test -s node

      - name: molecule default scenario
        if: matrix.test_molecule == true
        run: |
          source ~/.virtualenvs/molecule/bin/activate
          molecule test --destroy never

      - name: molecule update scenario
        if: matrix.test_molecule == true
        run: |
          source ~/.virtualenvs/molecule/bin/activate
          molecule test --destroy never -s update

      - name: molecule controlnode scenario
        if: matrix.test_controlnode == true
        run: |
          source ~/.virtualenvs/molecule/bin/activate
          molecule test -s controlnode

      - name: molecule scenario virtualenv
        if: matrix.test_molecule == true
        run: |
          source ~/.virtualenvs/molecule/bin/activate
          molecule test -s virtualenv

      - name: molecule scenario virtualenv for ansible 2.9
        if: matrix.test29 == true
        run: |
          source ~/.virtualenvs/molecule/bin/activate
          molecule test -s virtualenv29

...
