# vim: set ft=yaml ts=2 expandtab:
---

name: CI

on: # yamllint disable-line rule:truthy

  push:
    branches:
    - '**'
    tags-ignore:
    - '*'

  schedule:
  - cron: '40 12 * * 6'

jobs:

  ansible-test:

    # don't run on pull request from ourselves
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false

      matrix:

        include:

          - ansible_version: '2.9'
            python_version: '2.7'

          - ansible_version: '2.9'
            python_version: '3.5'

          - ansible_version: '2.9'
            python_version: '3.6'

          - ansible_version: '2.9'
            python_version: '3.7'

          - ansible_version: '2.9'
            python_version: '3.8'


          - ansible_version: '2.10'
            python_version: '3.6'

          - ansible_version: '2.10'
            python_version: '3.7'

          - ansible_version: '2.10'
            python_version: '3.8'

          - ansible_version: '2.10'
            python_version: '3.9'


          - ansible_version: '2.11'
            python_version: 3.6

          - ansible_version: '2.11'
            python_version: 3.7

          - ansible_version: '2.11'
            python_version: 3.8

          - ansible_version: '2.11'
            python_version: 3.9

          # change to 2.12 after release
          - ansible_version: '2.12.0rc1'
            python_version: '3.8'

          - ansible_version: '2.12.0rc1'
            python_version: '3.9'

          - ansible_version: '2.12.0rc1'
            python_version: '3.10'

    env:
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1
      # necessary ?
      ANSIBLE_PYTHON_INTERPRETER: python${{ matrix.python_version }}

    defaults:
      run:
        working-directory: ansible_collections/mafalb/ansible

    steps:

      - name: checkout collection mafalb.ansible
        uses: actions/checkout@v2
        with:
          path: ansible_collections/mafalb/ansible

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}

      # necessary ?
      - name: install virtualenv for python 2.7
        if: matrix.python_version == '2.7'
        run: pip install virtualenv

      - name: install molecule
        run: |
          ansible-playbook -D playbooks/install-ansible.yml -e '{"virtualenv_packages":["_ansible==${{ matrix.ansible_version }}", "ansible-lint${{ matrix.ansible_lint_specifier }}", "_ansible_test", "flake8"]}' -e mafalb_ansible_virtualenv_python=python${{ matrix.python_version }} -t all,debug
        env:
          ANSIBLE_COLLECTIONS_PATHS: ../../..

      - name: install shellcheck
        run: sudo apt-get install shellcheck

      - name: check ansible version
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          ansible --version
          ansible --version | grep "^ansible.* ${{ matrix.ansible_version }}"

      - name: check python version
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          ansible --version | grep "^\s*python.* ${{ matrix.python_version }}"

      - name: lint
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          . tests/lint.sh requirements ${{ matrix.python_version }}

      - name: sanity
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          ansible-test sanity --requirements --python ${{ matrix.python_version }}

      - name: unit tests
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          ansible-test units --coverage --requirements --python ${{ matrix.python_version }}

  CI:

    # don't run on pull request from ourselves
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-20.04
    needs: ansible-test

    strategy:
      fail-fast: false

      matrix:

        target:
          - fedora33
          - fedora34
          - fedora35
          - c8s
          - c9s
          - centos7
          - centos8
          - rocky8
          - alma8
          - debian9
          - debian10
          - debian11
          - ubuntu18
          - ubuntu20
          - ubuntu2104
          - ubuntu2110

        ansible_version:
        - '2.11'
        - '2.10'
        - '2.9'

        include:

        - target: fedora33
          image: docker.io/fedora:33
          test_molecule: true
          test_controlnode: true


        - target: fedora34
          image: docker.io/fedora:34
          test_molecule: true
          test_controlnode: true

        - os: fedora35
          image: registry.fedoraproject.org/fedora:35
          test_controlnode: true

        - target: c8s
          image: quay.io/centos/centos:stream8
          test_molecule: true
          test_controlnode: true
          test29: true

        - os: c9s
          image: quay.io/centos/centos:stream9
          test_controlnode: true

        - target: alma8
          image: quay.io/almalinux/almalinux:8
          test_molecule: true
          test_controlnode: true
          test29: true

        - target: rocky8
          image: quay.io/rockylinux/rockylinux:8
          test_molecule: true
          test_controlnode: true
          test29: true

        - target: centos7
          image: quay.io/centos/centos:7
          test_molecule: true
          test_controlnode: true
          test29: true

        - target: centos8
          image: quay.io/centos/centos:8
          test_molecule: true
          test_controlnode: true
          test29: true

        - target: debian9
          image: docker.io/debian:stretch

        - target: debian10
          image: docker.io/debian:buster

        - target: debian11
          image: docker.io/debian:bullseye
          test_molecule: true
          test_controlnode: true

        - target: ubuntu16
          image: docker.io/ubuntu:xenial

        - target: ubuntu18
          image: docker.io/ubuntu:bionic
          test_molecule: true
          test29: true

        - target: ubuntu20
          image: docker.io/ubuntu:focal
          test_molecule: true
          test_controlnode: true
          test29: true

        - target: ubuntu2104
          image: docker.io/ubuntu:hirsute
          test_molecule: true
          test_controlnode: true

        # ubuntu impish
        - target: ubuntu2110
          image: docker.io/ubuntu:21.10
          test_molecule: true
          test_controlnode: true

    env:
      ANSIBLE_VERSION: ${{ matrix.ansible_version }}
      CI_IMAGE: ${{ matrix.image }}
      CI_HOSTNAME: ci-${{ matrix.target }}
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1

    defaults:
      run:
        working-directory: ansible_collections/mafalb/ansible

    steps:

      - name: checkout collection ansible
        uses: actions/checkout@v2
        with:
          path: ansible_collections/mafalb/ansible

      - name: install molecule
        run: ansible-playbook -e ansible_python_interpreter=python3 -D playbooks/molecule.yml -t all,debug -e molecule_ansible_version=${{ matrix.ansible_version }}
        env:
          ANSIBLE_COLLECTIONS_PATHS: '../../..'

      - name: check ansible version
        run: |
          source ~/.virtualenvs/molecule/bin/activate
          ansible --version | grep "^ansible.* ${{ matrix.ansible_version }}"

      - name: molecule node scenario
        run: |
          source ~/.virtualenvs/molecule/bin/activate
          molecule test -s node

      - name: molecule default scenario
        if: matrix.test_molecule == true
        run: |
          source ~/.virtualenvs/molecule/bin/activate
          molecule test --destroy never

      - name: molecule update scenario
        if: matrix.test_molecule == true
        run: |
          source ~/.virtualenvs/molecule/bin/activate
          molecule test --destroy never -s update

      - name: molecule controlnode scenario
        if: matrix.test_controlnode == true
        run: |
          source ~/.virtualenvs/molecule/bin/activate
          molecule test -s controlnode

...
