# vim: set ft=yaml ts=2 expandtab:
---

name: CI

on: # yamllint disable-line rule:truthy

  push:
    branches:
    - '**'
    tags-ignore:
    - '*'

  schedule:
  - cron: '40 12 * * 6'

jobs:

  ansible-test:

    # don't run on pull request from ourselves
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false

      matrix:

        include:

          - ansible_version: '2.9'
            python_version: '2.7'

          - ansible_version: '2.9'
            python_version: '3.5'

          - ansible_version: '2.9'
            python_version: '3.6'

          - ansible_version: '2.9'
            python_version: '3.7'

          - ansible_version: '2.9'
            python_version: '3.8'


          - ansible_version: '2.10'
            python_version: '3.6'

          - ansible_version: '2.10'
            python_version: '3.7'

          - ansible_version: '2.10'
            python_version: '3.8'

          - ansible_version: '2.10'
            python_version: '3.9'


          - ansible_version: '2.11'
            python_version: 3.6

          - ansible_version: '2.11'
            python_version: 3.7

          - ansible_version: '2.11'
            python_version: 3.8

          - ansible_version: '2.11'
            python_version: 3.9

          # change to 2.12 after release
          - ansible_version: '2.12.0rc1'
            python_version: '3.8'

          - ansible_version: '2.12.0rc1'
            python_version: '3.9'

          - ansible_version: '2.12.0rc1'
            python_version: '3.10'

    env:
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1
      # necessary ?
      ANSIBLE_PYTHON_INTERPRETER: python${{ matrix.python_version }}

    defaults:
      run:
        working-directory: ansible_collections/mafalb/ansible

    steps:

      - name: checkout collection mafalb.ansible
        uses: actions/checkout@v2
        with:
          path: ansible_collections/mafalb/ansible

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}

      # necessary ?
      - name: install virtualenv for python 2.7
        if: matrix.python_version == '2.7'
        run: pip install virtualenv

      - name: install molecule
        run: |
          ansible-playbook -D playbooks/install-ansible.yml -e '{"virtualenv_packages":["_ansible==${{ matrix.ansible_version }}", "ansible-lint${{ matrix.ansible_lint_specifier }}", "_ansible_test", "flake8"]}' -e mafalb_ansible_virtualenv_python=python${{ matrix.python_version }} -t all,debug
        env:
          ANSIBLE_COLLECTIONS_PATHS: ../../..

      - name: install shellcheck
        run: sudo apt-get install shellcheck

      - name: check ansible version
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          ansible --version
          ansible --version | grep "^ansible.* ${{ matrix.ansible_version }}"

      - name: check python version
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          ansible --version | grep "^\s*python.* ${{ matrix.python_version }}"

      - name: lint
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          . tests/lint.sh requirements ${{ matrix.python_version }}

      - name: sanity
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          ansible-test sanity --requirements --python ${{ matrix.python_version }}

      - name: unit tests
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          ansible-test units --coverage --requirements --python ${{ matrix.python_version }}

  controlnode:

    # don't run on pull request from ourselves
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-20.04
    needs: ansible-test

    strategy:
      fail-fast: false

      matrix:

        os:
          - fedora33
          - fedora34
          - fedora35
          - c8s
          - c9s
          - centos7
          - centos8
          - rocky8
          - alma8
          - debian11
          - ubuntu20
          - ubuntu2104
          - ubuntu2110

        ansible_version:
          - '2.12'
          - '2.11'
          - '2.10'
          - '2.9'

        include:

          - os: fedora33
            image: docker.io/fedora:33

          - os: fedora34
            image: docker.io/fedora:34

          - os: fedora35
            image: registry.fedoraproject.org/fedora:35

          - os: c8s
            image: quay.io/centos/centos:stream8

          - os: c9s
            image: quay.io/centos/centos:stream9

          - os: alma8
            image: quay.io/almalinux/almalinux:8

          - os: rocky8
            image: quay.io/rockylinux/rockylinux:8

          - os: centos7
            image: quay.io/centos/centos:7

          - os: centos8
            image: quay.io/centos/centos:8

          - os: debian11
            image: docker.io/debian:bullseye

          - os: ubuntu20
            image: docker.io/ubuntu:focal

          - os: ubuntu2104
            image: docker.io/ubuntu:hirsute

          # ubuntu impish
          - os: ubuntu2110
            image: docker.io/ubuntu:21.10

        exclude:

          - os: fedora33
            ansible_version: '2.10'
          - os: fedora33
            ansible_version: '2.12'

          - os: fedora34
            ansible_version: '2.10'
          - os: fedora34
            ansible_version: '2.12'

          - os: fedora35
            ansible_version: '2.10'
          - os: fedora35
            ansible_version: '2.12'

          - os: c8s
            ansible_version: '2.10'
          - os: c8s
            ansible_version: '2.11'
          - os: c8s
            ansible_version: '2.12'

          - os: c9s
            ansible_version: '2.9'
          - os: c9s
            ansible_version: '2.10'
          - os: c9s
            ansible_version: '2.12'

          - os: alma8
            ansible_version: '2.10'
          - os: alma8
            ansible_version: '2.11'
          - os: alma8
            ansible_version: '2.12'

          - os: rocky8
            ansible_version: '2.10'
          - os: rocky8
            ansible_version: '2.11'
          - os: rocky8
            ansible_version: '2.12'

          - os: centos7
            ansible_version: '2.10'
          - os: centos7
            ansible_version: '2.11'
          - os: centos7
            ansible_version: '2.12'

          - os: centos8
            ansible_version: '2.10'
          - os: centos8
            ansible_version: '2.11'
          - os: centos8
            ansible_version: '2.12'

          - os: debian11
            ansible_version: '2.9'
          - os: debian11
            ansible_version: '2.11'
          - os: debian11
            ansible_version: '2.12'

          - os: ubuntu20
            ansible_version: '2.10'
          - os: ubuntu20
            ansible_version: '2.11'
          - os: ubuntu20
            ansible_version: '2.12'

          - os: ubuntu2104
            ansible_version: '2.9'
          - os: ubuntu2104
            ansible_version: '2.11'
          - os: ubuntu2104
            ansible_version: '2.12'

          - os: ubuntu2110
            ansible_version: '2.9'
          - os: ubuntu2110
            ansible_version: '2.11'
          - os: ubuntu2110
            ansible_version: '2.12'

    env:
      ANSIBLE_VERSION: ${{ matrix.ansible_version }}
      CI_IMAGE: ${{ matrix.image }}
      CI_HOSTNAME: ci-${{ matrix.os }}
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1

    defaults:
      run:
        working-directory: ansible_collections/mafalb/ansible

    steps:

      - name: checkout collection ansible
        uses: actions/checkout@v2
        with:
          path: ansible_collections/mafalb/ansible

      - name: install molecule
        run: ansible-playbook -e ansible_python_interpreter=python3 -D playbooks/install-molecule.yml -t all,debug -e molecule_ansible_version=${{ matrix.ansible_version }}
        env:
          ANSIBLE_COLLECTIONS_PATHS: '../../..'

      - name: install community.docker
        if: matrix.ansible_version != '2.9'
        run: |
          source ~/.virtualenvs/molecule/bin/activate
          ansible-galaxy collection install community.docker
          # necessary for molecule and for mafalb.ansible
          ansible-galaxy collection install community.general

      - name: check ansible version
        run: |
          source ~/.virtualenvs/molecule/bin/activate
          ansible --version | grep "^ansible.* ${{ matrix.ansible_version }}"

      - name: molecule controlnode scenario
        run: |
          source ~/.virtualenvs/molecule/bin/activate
          molecule test -s controlnode

...
